<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_172325_travel_ex_travel_expences_table</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Duration </name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	// Add your code here
	if(current.u_fiscal == 1){
		var gdt1 = new GlideDateTime(current.date_from);
		if(gdt1.getMonthUTC()<4){
			var gdt2 = new GlideDateTime(current.date_till);
			var duration = GlideDateTime.subtract(gdt1,gdt2);
			if(duration.getDayPart()>=0){
				current.duration = duration.getDayPart()+1.0;
				
			}
			else{
				gs.addErrorMessage("Date Till must be after the date From");
				current.duration = "";
			}
			
		}
		else{
			gs.addErrorMessage("Month should be before April");
		}
	}
	
	else if(current.u_fiscal == 2){
		var gdt1 = new GlideDateTime(current.date_from);
		if(gdt1.getMonthUTC()>3 && gdt1.getMonthUTC()<7){
			var gdt2 = new GlideDateTime(current.date_till);
			var duration = GlideDateTime.subtract(gdt1,gdt2);
			if(duration.getDayPart()>=0){
				current.duration = duration.getDayPart()+1.0;
				
			}
			else{
				gs.addErrorMessage("Date Till must be after the date From");
				current.duration = "";
			}
		}
		else{
			gs.addErrorMessage("Month should be After March and before July");
		}
		return;
	}
	else if(current.u_fiscal == 3){
		var gdt1 = new GlideDateTime(current.date_from);
		if(gdt1.getMonthUTC()>6 && gdt1.getMonthUTC()<10){
			var gdt2 = new GlideDateTime(current.date_till);
			var duration = GlideDateTime.subtract(gdt1,gdt2);
			if(duration.getDayPart()>=0){
				current.duration = duration.getDayPart()+1.0;
				
			}
			else{
				gs.addErrorMessage("Date Till must be after the date From");
				current.duration = "";
			}
		}
		else{
			gs.addErrorMessage("Month should be after june and before October");
		}
		return;
	}
	else if(current.u_fiscal == 4){
		var gdt1 = new GlideDateTime(current.date_from);
		if(gdt1.getMonthUTC()>9 && gdt1.getMonthUTC()<13){
			var gdt2 = new GlideDateTime(current.date_till);
			var duration = GlideDateTime.subtract(gdt1,gdt2);
			if(duration.getDayPart()>=0){
				current.duration = duration.getDayPart()+1.0;
				
			}
			else{
				gs.addErrorMessage("Date Till must be after the date From");
				current.duration = "";
			}
		}
		else{
			gs.addErrorMessage("Month should be after September and before January");
		}
		return;
	}
	
	
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-04-12 20:49:31</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d972a07737515300b06c097973990e97</sys_id>
        <sys_mod_count>52</sys_mod_count>
        <sys_name>Duration </sys_name>
        <sys_overrides/>
        <sys_package display_value="Travel Expences" source="x_172325_travel_ex">a23a4c7b37115300b06c097973990e1c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Travel Expences">a23a4c7b37115300b06c097973990e1c</sys_scope>
        <sys_update_name>sys_script_d972a07737515300b06c097973990e97</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-04-13 06:27:52</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d972a07737515300b06c097973990e97"/>
</record_update>
